name: Python tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      #------------------------------------------------------------
      #  -----  Python setup  -------------------------------------
      #------------------------------------------------------------
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.10.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      #------------------------------------------------------------
      #  -----  Install & configure poetry  -----------------------
      #------------------------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #------------------------------------------------------------
      #  -----  Load cached venv if cache exists ------------------
      #------------------------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #------------------------------------------------------------
      #  -----  Install dependencies if cache does not exist  -----
      #------------------------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #------------------------------------------------------------
      #  -----  Install project  ----------------------------------
      #------------------------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #------------------------------------------------------------
      #  -----  Run tests  ----------------------------------------
      #------------------------------------------------------------
      - name: Run pytest tests
        run: poetry run bash ${{ github.workspace }}/scripts/test.sh
      - name: Run lint tests
        run:  poetry run bash ${{ github.workspace }}/scripts/lint.sh
      - name: Run copyright tests
        run:   poetry run bash ${{ github.workspace }}/scripts/copyright_line_check.sh